import { chain } from 'stream-chain';
import parser from 'stream-json';
import Pick from 'stream-json/filters/Pick.js';
import StreamArray from 'stream-json/streamers/StreamArray.js';

import { createReadStream } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const WORDS_OFFSET = 3;

// const normalizedDataBaseMap = new Map<string, number>();
const dataBaseMap = new Map<string, number>();

interface Post { text: string; }

function isPost(value: unknown): value is Post {
  if (value === null || typeof value !== 'object') {
    return false;
  }

  return 'text' in value && typeof (value as { text: unknown }).text === 'string';
}

const GARBAGE_LIST: string[] = [
  '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å ‚¨ÖÔ∏è \n–†–µ–∑–µ—Ä–≤–Ω—ã–π –∫–∞–Ω–∞–ª ‚¨ÖÔ∏è',
  '–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å\\–†–µ–∫–ª–∞–º–∞ - @zheldor_admin',
  '–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å - @zheldor_admin',
  '–í—Å—Ç—É–ø–∏—Ç—å —Ç—É—Ç ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å\\–†–µ–∫–ª–∞–º–∞ - @zheldor_admin',
  '–°—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ç—É—Ç ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å\\–†–µ–∫–ª–∞–º–∞ - @zheldor_admin',
  '–°—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è —Ç—É—Ç ‚¨ÖÔ∏è\n–ù–∞—à –≤—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª: ‚û°Ô∏è –ë–∞—Ä–∞—Ö–æ–ª–∫–∞ ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å\\–†–µ–∫–ª–∞–º–∞ - @zheldor_admin',
  '–Ω–æ–≤–æ—Å—Ç—å - @zheldor_admin',
  '–ù–∞—à –≤—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª: ‚û°Ô∏è –ë–∞—Ä–∞—Ö–æ–ª–∫–∞ ‚¨ÖÔ∏è\n–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å\\–†–µ–∫–ª–∞–º–∞ - @zheldor_admin',
  '–ù–ï –ü–ò–®–ï–ú –ò–ù–§–û–†–ú–ê–¶–ò–Æ: –ß–¢–û/–ö–£–î–ê/–û–¢–ö–£–î–ê –õ–ï–¢–ï–õ–û. –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù.',
  '–ø—Ä–æ –Ω–∞—à –≤—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª: –ë–∞—Ä–∞—Ö–æ–ª–∫–∞ –ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–π',
  '\n______________________________________\n',
  '\n_____________________________________\n',
  '\n____________________________________\n',
  '\n_________________________________\n',
  '\n________________________________\n',
  '\n___________________________\n',
  '\n_________________________\n',
  '\n________________________\n',
  '\n_______________________\n',
  '\n______________________\n',
  '\n_____________________\n',
  '\n____________________\n',
  '\n___________________\n',
  '\n__________________\n',
  '\n_________________\n',
  '\n________________\n',
  '\n_______________\n',
  '\n______________\n',
  '\n_____________\n',
  '\n____________\n',
  '\n___________\n',
  '\n__________\n',
  '\n_________\n',
  '\n______\n',
  '\n____\n',
  '\n___\n',
  '\n__\n',
  '\n_\n',
  '–≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –∏ –∫—É–ø–∏—Ç—å –±/—É (–∏ –Ω–æ–≤—ã–µ) –≤–µ—â–∏, —Ç–µ—Ö–Ω–∏–∫—É –∏ –∏–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.\n\n‚¨áÔ∏è –°–°–´–õ–ö–ê ‚¨áÔ∏è\nhttps://t.me/+2-05d22f7f4zN2Ey\n\n–ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ - @baraholka_adm \n–¢–æ–ª—å–∫–æ —á–∞—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏, –Ω–µ –∫–æ–º–º–µ—Ä—Ü–∏—è ‚ùå',
];

const GARBAGE_POSTS_LIST: string[] = [
  '–ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ 24–∞ \nUP –õ—É–≥–æ–≤–∞—è 14–∫1\n–¢–µ–ª.',
  '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –ü–£–¢–Å–í–´–ô‚úî\n- –ö–ª–∏–∫–Ω—É—Ç—å',
  '—Ä–∞–∑—Ä—è–¥–æ–≤ –∏ –∑–≤–∞–Ω–∏–π\n-–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å –ù–£–õ–Ø\n-–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞',
  '79771106050',
  '8-926-319-96-17 –û—Ç—Ä–∞–¥–∞ –û–∫–Ω–∞',
  'https://t.me/justeatsu',
  '+7(916)426-60-37',
  '89263951101',
  'ExcursiiJeldor',
  '89209065025',
  '+7 (925) 721-98-82',
  '+7 (926) 292-92-11',
  'modnaya_shtora',
  '7(926)117-66-55',
  'stroitrakt',
  '–í–Ω–∏–º–∞–Ω–∏–µ, —Ä–æ–∑—ã–≥—Ä—ã—à –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–æ–≥–æ',
  '—Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Å–º–æ—Å–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∏—Ç—å–µ–≤–æ–π',
  '–ø—Ä–µ–¥–µ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã:\n‚†Ä\n‚úÖ–ë—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã - –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
  '89913080091',
  '84951960091',
  'friends_zagorodnyi_club',
  'fishstore_zheldor',
  'M0eifQxV0phjNjhi',
  '–Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏ –≤–∫—É—Å–Ω—É—é —Ä—ã–±–∫—É, —Å–æ–ª–∏–º,',
  'permanentgarage',
  '7 (495) 369-60-91',
  '7 (495) 369-60-92',
  '7 (495) 181-85-15',
  'DomVISMUTZheldor',
  '7 962 98 13 660',
  '89851826969',
  '8-495-363-59-53',
  'FREYA',
  '8 (901) 798-98-91',
  'natasha_tetery',
  '–≤–∞—Å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ª–µ–∫—Ü–∏–∏ –≤ ¬´–ë–∞–ª–∞—à–∏—Ö–∏–Ω—Å–∫–∏–π',
  '–ü–£–¢–Å–í–´–ô',
  '–ü—É—Ç—ë–≤—ã–π',
  '79857944134',
  '8(977)419-54-85',
  'beauty_domik',
  'kursy_v_zheleznodorozhnom',
  '60460047077',
  'estetika.artstudio',
  '79646441943',
  '8 (499) 499-99-23',
  '—Å 10:00 –¥–æ 23:00 –≤–æ –≤—Å–µ—Ö',
  '–í —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é –Ω–∞ —Å–∫–ª–∞–¥ —Ç—Ä–µ–±—É—é—Ç—Å—è',
  'elbody.tilda.ws',
  'tuningtela_balashiha',
  '7(919)100-89-00',
  '89250200909',
  '–õ–ò–ö–í–ò–î–ê–¶–ò–Ø —Å–∫–ª–∞–¥–∞ –¥–≤–µ—Ä–µ–π –≤—Ö–æ–¥–Ω—ã—Ö –∏ –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö',
  '7(499)7034004',
  '7(916)030-74-68',
  'studio_vestra',
  '8-905-555-90-40',
  'kraski.jeleznodorojniy',
  'fcdynamika',
  'zd.farm',
  '89163844068',
  '89776163393',
  '79661895634',
  '8 964 624 82 22',
  '7 (925) 313-44-04',
  '89859276777',
  '7(495) 649-82-05',
  'baraholka_adm',
  'OtradaOkna',
  'SIRIUS',
  '79646248222',
  '79253553557',
  '79162648003',
  '79000751453',
  '89060312822',
  'CCUHIPX4oA',
  '84994994248',
  '89385349451',
  '–ü—Ä–æ–°–∏–ª—É—ç—Ç',
  '7 (495) 988-92-98',
  'kuhni_renessans',
  '89162237250',
  '8-498-602-20-74',
  '–°—Ç—Ä–æ–π–¢—Ä–∞–∫—Ç',
  'malyavochki_kids',
  'VaPadhT8y7FVqp3m',
  '7 (929) 570 78 81',
  '–ú—ã ‚Äî –∫–∞–Ω–∞–ª –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ç—É—Ä–∏–∑–º!',
  '8(926)040-47-92',
  '–∫—É—Ö–Ω–∏ –æ—Ç 40000 —Ä.\n\nüìå –ë–ï–°–ü–õ–ê–¢–ù–û –∑–∞–º–µ—Ä, 3d –ø—Ä–æ–µ–∫—Ç –∏ –¥–æ—Å—Ç–∞–≤–∫–∞',
  '8(985)889-64-77',
  '8(499) 226-17-86',
  'UPfitness',
  'club214464770',
  'personaltulip',
  '7 916 467 61 41',
  '—Ä–µ–ª—å—Å—ã –≤ –º–µ—Ç—Ä–æ. –õ—É—á—à–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é.\n\n‚úÖ –°–ø–æ–π–ª–µ—Ä: –ª–æ–∂–∏—Ç–µ—Å—å –º–µ–∂–¥—É —Ä–µ–ª—å—Å,',
];

function replaceGarbage(sourceStr: string): string {
  let cleanStr = sourceStr;

  if (!GARBAGE_LIST.length) {
    return cleanStr;
  }

  GARBAGE_LIST.forEach((garbage) => {
    cleanStr = cleanStr.replace(garbage, '');
  });

  return cleanStr;
}

function buildNgramMap(sourceStr: string, dataBaseMap: Map<string, number>): void {
  const postIsGarbage = GARBAGE_POSTS_LIST.some((garbage) => sourceStr.includes(garbage));

  if (postIsGarbage) {
    return;
  }

  const ungarbageStr = replaceGarbage(sourceStr.trim());

  const normalizedStr = ungarbageStr
    .split(' ')
    .filter(Boolean);

  const firstIndex = 0;
  const lastIndex = normalizedStr.length - WORDS_OFFSET;

  for (let index = firstIndex; index <= lastIndex; index++) {
    const entrySlice = normalizedStr.slice(index, index + WORDS_OFFSET);
    const entryKey = entrySlice.join(' ');

    const currentCount = dataBaseMap.get(entryKey) ?? 0;
    dataBaseMap.set(entryKey, currentCount + 1);
  }
}

// function buildNormalizedNgramMap(sourceStr: string, normalizedDataBaseMap: Map<string, number>): void {
//   const normalizedStr = sourceStr
//     .replace(/[^–∞-—è–ê-–Ø—ë–Å ]/g, ' ')
//     .trim()
//     .split(' ')
//     .filter(Boolean)
//     .map((word) => word.toLocaleLowerCase());

//   const firstIndex = 0;
//   const lastIndex = normalizedStr.length - WORDS_OFFSET;

//   for (let index = firstIndex; index <= lastIndex; index++) {
//     const entrySlice = normalizedStr.slice(index, index + WORDS_OFFSET);
//     const entryKey = entrySlice.join(' ');

//     const currentCount = normalizedDataBaseMap.get(entryKey) ?? 0;
//     normalizedDataBaseMap.set(entryKey, currentCount + 1);
//   }
// }

async function processJsonStream(filePath: string): Promise<Map<string, number>> {
  const pipeline = chain([
    createReadStream(filePath),
    parser(),
    new Pick({ filter: 'posts' }),
    new StreamArray(),
  ]);

  try {
    for await (const { value } of pipeline) {
      if (isPost(value)) {
        buildNgramMap(value.text, dataBaseMap);
        // buildNormalizedNgramMap(value.text, normalizedDataBaseMap);
      }
    }

    return dataBaseMap;
  } catch (err) {
    console.error('Stream processing error:', err);
    throw err;
  }
}

// --- Main execution ---
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const dataFilePath = join(__dirname, '..', 'plain_data', 'posts.json');

export async function indexText(): Promise<[string, number][]> {
  const dataBaseMap = await processJsonStream(dataFilePath);

  const exceptions = [
    'üå∏ –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –ü–µ—Å—Ç–æ–≤—Å–∫–æ–º –ø–∞—Ä–∫–µ',
    '–ì–°–£ –°–ö –†–æ—Å—Å–∏–∏ –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
    '–ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –ü–µ—Å—Ç–æ–≤—Å–∫–æ–º –ø–∞—Ä–∫–µ –Ω–∞',
    '000 000 000 000 000 000',
    '–Ω–µ —Å–∏–¥–∏—Ç–µ –∏ –Ω–µ –ª–µ–∂–∏—Ç–µ –Ω–∞',
    '—Å–∏–¥–∏—Ç–µ –∏ –Ω–µ –ª–µ–∂–∏—Ç–µ –Ω–∞ —Ç—Ä–∞–≤–µ',
    '‚Ññ 34–∫ ¬´–ñ–ö –¶–µ–Ω—Ç—Ä-2 - –ø–ª–∞—Ç—Ñ.',
    '34–∫ ¬´–ñ–ö –¶–µ–Ω—Ç—Ä-2 - –ø–ª–∞—Ç—Ñ. –û–ª—å–≥–∏–Ω–æ¬ª',
    '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–∞–Ω—Ç–∞–∑–∏—è –Ω–∞ —Ç–µ–º—É –ø–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞, –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã',
    '—Ñ–∞–Ω—Ç–∞–∑–∏—è –Ω–∞ —Ç–µ–º—É –ø–æ—Å—Ç–∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞, –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è',
    '–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ , –ø—Ä–∏–Ω–∏–º–∞–µ—Ç',
    '–¥–æ–ª–∂–µ–Ω –±—ã–ª –±–æ—Ä–æ—Ç—å—Å—è —Å–æ –∑–ª–æ–º, –∞',
    '–±—ã–ª –±–æ—Ä–æ—Ç—å—Å—è —Å–æ –∑–ª–æ–º, –∞ –Ω–µ',
    '–±–æ—Ä–æ—Ç—å—Å—è —Å–æ –∑–ª–æ–º, –∞ –Ω–µ –ø—Ä–∏–º–∫–Ω—É—Ç—å',
    '—Å–æ –∑–ª–æ–º, –∞ –Ω–µ –ø—Ä–∏–º–∫–Ω—É—Ç—å –∫',
    '–≤–∞—à–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∞ –Ω–µ –ø–æ—Ö–æ–∂–∞ –Ω–∞ —ç—Ç—É‚Ä¶',
    '–ø–æ—è–≤—è—Ç—Å—è –±–æ–ª—å—à–∞—è –ø—Ä–æ–≥—É–ª–æ—á–Ω–∞—è –∑–æ–Ω–∞, –¥–≤–µ –¥–µ—Ç—Å–∫–∏–µ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è',
    '–±–æ–ª—å—à–∞—è –ø—Ä–æ–≥—É–ª–æ—á–Ω–∞—è –∑–æ–Ω–∞, –¥–≤–µ –¥–µ—Ç—Å–∫–∏–µ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è –∑–∞–Ω—è—Ç–∏–π',
    '–ø—Ä–æ–≥—É–ª–æ—á–Ω–∞—è –∑–æ–Ω–∞, –¥–≤–µ –¥–µ—Ç—Å–∫–∏–µ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º',
    '–¥–æ–ª–∂–µ–Ω –±—ã–ª –±–æ—Ä–æ—Ç—å—Å—è —Å–æ –∑–ª–æ–º, –∞ –Ω–µ –ø—Ä–∏–º–∫–Ω—É—Ç—å –∫ –Ω–µ–º—É!',
    '–∑–æ–Ω–∞, –¥–≤–µ –¥–µ—Ç—Å–∫–∏–µ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º –Ω–∞',
    '–¥–≤–µ –¥–µ—Ç—Å–∫–∏–µ –∏–≥—Ä–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, —Ç—Ä–µ–Ω–∞–∂–µ—Ä—ã –¥–ª—è –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º',
  ];

  console.log([...dataBaseMap.entries()].length);

  const sortedDataBase = [...dataBaseMap.entries()]
    .sort((a, b) => b[1] - a[1])
    .slice(0, 10 + exceptions.length)
    .filter((entry) => !exceptions.includes(entry[0]));

  console.log('Top 10 n-grams:');
  console.log(sortedDataBase);

  return sortedDataBase;
}
